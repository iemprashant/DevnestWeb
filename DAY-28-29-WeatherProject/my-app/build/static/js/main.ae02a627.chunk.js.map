{"version":3,"sources":["Components/form.jsx","store/actions/index.js","Components/weathercard.jsx","App.jsx","store/reducers/placeDataReducer.js","store/reducers/placeReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["PlaceForm","place","useSelector","state","dispatch","useDispatch","className","class","type","value","placeholder","onChange","e","payload","updatePlace","target","id","onClick","fetch","then","res","json","data","console","log","updatePlaceData","WeatherCard","placedata","objToday","Date","today","getDay","getDate","getMonth","location","name","src","current","condition","icon","alt","temp_c","text","wind_kph","humidity","precip_mm","error","message","App","PlaceDataReducer","action","PlaceReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAoBeA,EAhBG,WACd,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACnCG,EAAWC,cACjB,OACI,mCACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKC,MAAM,eAAX,UACI,uBAAOC,KAAK,OAAOC,MAAOR,EAAOS,YAAY,uBAAuBC,SAAU,SAACC,GAAD,OAAOR,ECXrF,SAACH,GACjB,MAAO,CACHO,KAAM,eACNK,QAASZ,GDQiGa,CAAYF,EAAEG,OAAON,SAASF,MAAM,eAAe,mBAAiB,iBAClK,wBAAQC,KAAK,SAASD,MAAM,wCAAwCS,GAAG,eAAeC,QAAS,WAAQb,ECNnG,SAACH,GACrB,OAAO,SAACG,GACJc,MAAM,qFAAD,OAAsFjB,IAEtFkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACHC,QAAQC,IAAIF,GACZlB,EAAS,CACLI,KAAM,oBACNK,QAASS,QDHuGG,CAAgBxB,KAAhI,4BEgELyB,MAzEf,WACI,IAAMC,EAAYzB,aAAY,SAAAC,GAAK,OAAIA,EAAMwB,aAC7CJ,QAAQC,IAAIG,GACZ,IAAIC,EAAW,IAAIC,KA8BfC,EA7BU,CACN,SACA,SACA,UACA,YACA,WACA,SACA,YAEgBF,EAASG,UAoBT,MAlBhBD,GAASF,EAASI,UAAY,IACxB,IAAMJ,EAASI,UACfJ,EAASI,WAgBqB,IAf/B,CACL,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEcJ,EAASK,YAG/B,OACI,qBAAK3B,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kFAAf,SACKqB,EAAUO,SACP,gCACI,sBAAK5B,UAAU,gBAAf,UACI,+BAAI,mBAAGA,UAAU,qBAAjB,IAA0CqB,EAAUO,SAASC,QAC7D,qBAAKC,IAAKT,EAAUU,QAAQC,UAAUC,KAAMC,IAAI,KAChD,+BAAKb,EAAUU,QAAQI,OAAvB,QAAiCd,EAAUU,QAAQC,UAAUI,QAC7D,6BAAKZ,OAET,qBAAKxB,UAAU,gBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,mCAAMqB,EAAUU,QAAQM,SAAxB,UACA,yCAEJ,sBAAKrC,UAAU,iCAAf,UACI,+BAAKqB,EAAUU,QAAQO,SAAvB,OACA,6CAEJ,sBAAKtC,UAAU,iCAAf,UACI,+BAAKqB,EAAUU,QAAQQ,UAAvB,QACA,0DAMhB,mCAAGlB,EAAUmB,MAAQnB,EAAUmB,MAAMC,QAAU,8BCrDxDC,MAZf,WACE,OACE,qBAAK1C,UAAU,sEAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,oBAAIC,MAAM,MAAV,qFACA,cAAC,EAAD,IACA,cAAC,EAAD,U,OCFO0C,EANU,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAI+C,EAAW,uCAC7C,MAAoB,sBAAhBA,EAAO1C,KACA0C,EAAOrC,QAEXV,GCEIgD,EANM,WAAyB,IAAxBhD,EAAuB,uDAAf,GAAI+C,EAAW,uCACzC,MAAoB,iBAAhBA,EAAO1C,KACA0C,EAAOrC,QAEXV,GCAIiD,EADKC,YAAgB,CAAEpD,MAAMkD,EAAaxB,UAAUsB,I,OCApDK,EADDC,YAAYH,EAAaI,YAAgBC,MCIvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.ae02a627.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updatePlace } from '../store/actions';\r\nimport { updatePlaceData } from '../store/actions';\r\nconst PlaceForm = () => {\r\n    const place = useSelector(state => state.place);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <div class=\"input-group \">\r\n                    <input type=\"text\" value={place} placeholder=\"Enter your city name\" onChange={(e) => dispatch(updatePlace(e.target.value))} class=\"form-control\" aria-describedby=\"basic-addon2\" />\r\n                    <button type=\"button\" class=\"btn btn-outline-dark input-group-text\" id=\"basic-addon2\" onClick={() => { dispatch(updatePlaceData(place)); }} >Search</button>\r\n                </div>\r\n            </div >\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceForm;\r\n","const updatePlace = (place) => {\r\n    return {\r\n        type: \"UPDATE_PLACE\",\r\n        payload: place\r\n    };\r\n};\r\nconst updatePlaceData = (place) => {\r\n    return (dispatch) => {\r\n        fetch(`https://api.weatherapi.com/v1/forecast.json?key=bda0180c566c48c1957132200210709&q=${place}`\r\n        )\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                dispatch({\r\n                    type: \"UPDATE_PLACE_DATA\",\r\n                    payload: data\r\n                });\r\n            }\r\n            );\r\n\r\n    };\r\n};\r\nexport { updatePlace, updatePlaceData };","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nfunction WeatherCard() {\r\n    const placedata = useSelector(state => state.placedata);\r\n    console.log(placedata);\r\n    var objToday = new Date(),\r\n        weekday = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n        ],\r\n        dayOfWeek = weekday[objToday.getDay()],\r\n        dayOfMonth =\r\n            today + (objToday.getDate() < 10)\r\n                ? \"0\" + objToday.getDate()\r\n                : objToday.getDate(),\r\n        months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n        ],\r\n        curMonth = months[objToday.getMonth()];\r\n    var today = dayOfWeek + \", \" + dayOfMonth + \" \" + curMonth;\r\n\r\n    return (\r\n        <div className=\"container my-3\">\r\n            <div className=\"row\">\r\n                <div className=\"offset-md-3 col-12 col-md-6 weather rounded bg-secondary text-white  p-4 shadow\">\r\n                    {placedata.location ? (\r\n                        <div>\r\n                            <div className=\"container p-2\">\r\n                                <h1><i className=\"fa fa-map-marker\"></i> {placedata.location.name}</h1>\r\n                                <img src={placedata.current.condition.icon} alt=\"\" />\r\n                                <h5>{placedata.current.temp_c}¬∞,{placedata.current.condition.text}</h5>\r\n                                <h6>{today}</h6>\r\n                            </div>\r\n                            <div className=\"container p-2\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col border rounded m-1 p-2\">\r\n                                        <h5> {placedata.current.wind_kph}km/h</h5>\r\n                                        <h6>Wind</h6>\r\n                                    </div>\r\n                                    <div className=\"col col border rounded m-1 p-2\">\r\n                                        <h5>{placedata.current.humidity}%</h5>\r\n                                        <h6>Humidity</h6>\r\n                                    </div>\r\n                                    <div className=\"col col border rounded m-1 p-2\">\r\n                                        <h5>{placedata.current.precip_mm}mm</h5>\r\n                                        <h6>Precipitation</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>{placedata.error ? placedata.error.message : \"Location not found\"}</>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import './App.css';\nimport PlaceForm from './Components/form';\nimport WeatherCard from './Components/weathercard';\nfunction App() {\n  return (\n    <div className=\"App container text-center d-flex justify-content-center flex-column\">\n      <div className=\" App-content container bg-light d-flex flex-column rounded shadow px-4 py-5\">\n        <h3 class=\"m-3\">Alexa üôã‚Äç‚ôÄÔ∏è , What's The Weather Today ‚õÖ </h3>\n        <PlaceForm />\n        <WeatherCard />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nconst PlaceDataReducer = (state = {}, action) => {\r\n    if (action.type === \"UPDATE_PLACE_DATA\") {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n};\r\nexport default PlaceDataReducer","\r\nconst PlaceReducer = (state = \"\", action) => {\r\n    if (action.type === \"UPDATE_PLACE\") {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n};\r\nexport default PlaceReducer","\r\nimport { combineReducers } from \"redux\";\r\nimport PlaceDataReducer from \"./placeDataReducer\";\r\nimport PlaceReducer from \"./placeReducer\";\r\nconst rootReducer = combineReducers({ place:PlaceReducer,placedata:PlaceDataReducer });\r\nexport default rootReducer;","import rootReducer from \"./reducers\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\n\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}